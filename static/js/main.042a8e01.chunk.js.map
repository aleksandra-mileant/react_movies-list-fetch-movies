{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","API_KEY","getMovie","title","a","fetch","response","json","newMovie","FindMovie","addMovie","useState","setTitle","setMovie","error","setError","movieExist","setMovieExist","findMovie","newTitle","film","onSubmit","event","preventDefault","htmlFor","value","type","id","placeholder","classNames","onChange","target","onClick","some","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.042a8e01.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'http://www.omdbapi.com/';\nconst API_KEY = 'd905d6a3';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const response = await fetch(`${API_URL}/?apikey=${API_KEY}&t=${title}`);\n  const newMovie = await response.json();\n\n  return newMovie;\n}\n","import { ChangeEvent, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void,\n  movies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, movies }) => {\n  const [title, setTitle] = useState(' ');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [movieExist, setMovieExist] = useState(false);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setError(false);\n  };\n\n  const findMovie = async (newTitle: string) => {\n    const film = await getMovie(newTitle);\n\n    if (!film.Title) {\n      setError(true);\n    } else {\n      setMovie(film);\n      setError(false);\n    }\n  };\n\n  const clearInput = () => {\n    if (!error) {\n      setTitle('');\n      setMovie(null);\n    }\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (movie?.imdbID) {\n      addMovie(movie);\n    }\n\n    setTitle('');\n    setMovieExist(false);\n  };\n\n  const isMovieExist = () => {\n    if (movie && (movies.some(film => film.imdbID === movie.imdbID))) {\n      setMovieExist(true);\n    }\n  };\n\n  const addNewMovie = () => {\n    if (movie) {\n      addMovie(movie);\n      setTitle('');\n    }\n\n    isMovieExist();\n    clearInput();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"movie-title\"\n          >\n            Movie title\n            <div className=\"control\">\n              <input\n                value={title}\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input is-link', {\n                  'is-danger': error,\n                })}\n                onChange={handleChange}\n              />\n            </div>\n          </label>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n          {movieExist && (\n            <p className=\"help is-danger\">\n              The movie is already inside your list\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findMovie(title)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addNewMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC<{}> = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie): void => {\n    if (!movies.some(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovies([\n        ...movies,\n        newMovie,\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}